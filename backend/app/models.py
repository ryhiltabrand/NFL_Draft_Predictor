from django.db import models

# Create your models here.

class Teams(models.Model):
    acronym = model.CharField(max_length=3, primary_key=True)
    name = model.CharField(max_length=30)
    wins = model.IntegerField()
    loses = model.IntegerField()
    pointsFor = models.IntegerField()
    pointsAgainst = models.IntegerField()
    yardsFor = models.IntegerField()
    passingYards = models.IntegerField()
    passingTDs= models.IntegerField()
    passingInterceptions = models.IntegerField()
    rushingAttempts = models.IntegerField()
    rushingYards = models.IntegerField()
    defensiveIntereptions = models.IntegerField()
    forcedFumbles = models.IntegerField()

class Roster(models.Model):
    rosterID = models.CharField(max_length=5, primary_key=True)
    no = models.IntegerField()
    acronym = models.ForeignKey(Teams)
    name = models.CharField(max_length=100)
    position = models.CharField(max_length=2)
    gamesPlayed = models.IntegerField()
    gamesStarted = models.IntegerField()
    weight = models.IntegerField()
    height = models.CharField(max_length=4)
    college = model.CharField(max_length=100)
    birthDate = model.DateField()
    years = models.IntegerField()


class Offense(models.Model):
    acronym = models.ForeignKey(Teams)
    rosterID = models.ForeignKey(Roster)
    completions = models.IntegerField(blank=True)
    attempts = models.IntegerField(blank=True)
    passingYards = models.IntegerField(blank=True)
    passingTDs = models.IntegerField(blank=True)
    interceptions = models.IntegerField(blank=True)
    qbRate = models.DecimalField(blank=True, max_digits=5, decimal_places=2)
    qbr = models.DecimalField(blank=True, max_digits=5, decimal_places=2)
    rushingAttempts = models.IntegerField(blank=True)
    rushingYards = models.IntegerField(blank=True)
    rushingTDs = models.IntegerField(blank=True)
    rushingYPG = models.IntegerField(blank=True)
    rushingAPG = models.IntegerField(blank=True)
    passTargets = models.IntegerField(blank=True)
    receptions = models.IntegerField(blank=True)
    receivingYards = models.IntegerField(blank=True)
    receivingTDs = models.IntegerField(blank=True)
    catchPercentage = models.DecimalField(blank=True, max_digits=5, decimal_places=2)
    touches = models.IntegerField(blank=True)
    yardsFromScrimage = models.IntegerField(blank=True)
    fumbles = models.IntegerField(blank=True)

class Defense(models.Model):
    acronym = models.ForeignKey(Teams)
    no = models.ForeignKey(Roster)
    interceptions = models.IntegerField(blank=True)
    interceptionsYards = models.IntegerField(blank=True)
    interceptionTDs = models.IntegerField(blank=True)
    passDefended = models.IntegerField(blank=True)
    forcedFumbles = models.IntegerField(blank=True)
    fumblesRecovered = models.IntegerField(blank=True)
    fumbleYards = models.IntegerField(blank=True)
    fumbleTDs = models.IntegerField(blank=True)
    sacks = models.IntegerField(blank=True)
    combinedTackles = models.IntegerField(blank=True)
    soloTackles = models.IntegerField(blank=True)
    assistedTackles = models.IntegerField(blank=True)
    tacklesForLoss = models.IntegerField(blank=True)
    qbHits = models.IntegerField(blank=True)
    safteys = models.IntegerField(blank=True)

class SpecialTeams(models.Model):
    acronym = models.ForeignKey(Teams)
    no = models.ForeignKey(Roster)
    AllFGA = models.IntegerField(blank=True)
    ALlFMG = models.IntegerField(blank=True)
    twentyFGA = models.IntegerField(blank=True)
    twentyFGM = models.IntegerField(blank=True)
    thirtyFGA = models.IntegerField(blank=True)
    thirtyFGM = models.IntegerField(blank=True)
    fortyFGA = models.IntegerField(blank=True)
    fortyFGM = models.IntegerField(blank=True)
    fiftyPlusFGA = models.IntegerField(blank=True)
    fiftyPlusFMG = models.IntegerField(blank=True)
    longestFG = models.IntegerField(blank=True)
    FGPercentage = models.DecimalField(blank=True, max_digits=5, decimal_places=2)
    extraPointsAttempted = models.IntegerField(blank=True)
    extraPointsMade = models.IntegerField(blank=True)
    kickOffs = models.IntegerField(blank=True)
    kickOffYards = models.IntegerField(blank=True)
    kickOffAvg = models.IntegerField(blank=True)
    punts = models.IntegerField(blank=True)
    puntYards = models.IntegerField(blank=True)
    longestPunt = models.IntegerField(blank=True)
    blockedPunts = models.IntegerField(blank=True)

class CollegePlayers(models.Model):
    playeid = model.IntegerField(primary_key=True)
    name = model.CharField(max_length=100)
    firstName = model.CharField(max_length=50)
    lastName = model.CharField(max_length=50)
    college = model.CharField(max_length=100)
    weight = models.IntegerField()
    height = models.IntegerField()
    position = model.CharField(max_length=5)
    athleteGrade = models.DecimalField(blank=True, max_digits=5, decimal_places=2)
    positionGrade = models.DecimalField(blank=True, max_digits=5, decimal_places=2)

class DraftHistory(models.Model):
    year = models.IntegerField()
    round = models.IntegerField()
    pick = models.IntegerField()
    name = model.CharField(max_length=100)
    team = model.CharField(max_length=30)
    position = model.CharField(max_length=10)
    college = model.CharField(max_length=100)
    athleteGrade = models.DecimalField(blank=True, max_digits=5, decimal_places=2)
    positionGrade = models.DecimalField(blank=True, max_digits=5, decimal_places=2)

